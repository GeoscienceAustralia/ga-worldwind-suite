<?xml version="1.0" ?>

<project name="Viewer" basedir="." default="run">

	<property name="perform_unit_tests" value="true" />
	<property name="javac_debug" value="false" />

	<property name="src_dir" value="${basedir}/src/main/java" />
	<property name="resources_dir" value="${basedir}/src/main/resources" />

	<property name="target_dir" value="${basedir}/target" />
	<property name="build_dir" value="${target_dir}/classes" />
	<property name="package_dir" value="${target_dir}/package" />
	<property name="jar_name" value="viewer.jar" />

	<property name="test_src_dir" value="${basedir}/src/test/java" />
	<property name="test_build_dir" value="${target_dir}/test-classes" />
	<property name="test_results_dir" value="${basedir}/target/test-results" />
	<property name="test_reports_dir" value="${basedir}/target/test-reports" />

	<property name="executable_dir" value="${target_dir}/executable" />
	<property name="executable_jar_name" value="viewer-all-in-one.jar" />
	<property name="executable_batch_name" value="run.bat" />

	<property name="webstart_dir" value="${target_dir}/webstart" />
	<property name="webstart_unsigned_dir" value="${webstart_dir}/unsigned" />
	<property name="webstart_selfsigned_dir" value="${webstart_dir}/selfsigned" />
	<property name="webstart_resources_jar_name" value="resources.jar" />

	<property name="ww_natives_windows_i586_jar" value="worldwind-natives-windows-i586.jar" />
	<property name="ww_natives_windows_amd64_jar" value="worldwind-natives-windows-amd64.jar" />
	<property name="ww_natives_macosx_universal_jar" value="worldwind-natives-macosx-universal.jar" />
	<property name="ww_natives_linux_i586_jar" value="worldwind-natives-linux-i586.jar" />
	<property name="ww_natives_linux_amd64_jar" value="worldwind-natives-linux-amd64.jar" />

	<!-- Keystore configuration -->
	<property name="keystore_file" value="${basedir}/keystore" />
	<property name="keystore_alias" value="selfsigned" />
	<property name="keystore_password" value="password" />

	<property name="common_dir" value="${basedir}/../Common" />
	<property name="common_lib_dir" value="${common_dir}/lib" />
	<property name="common_build_lib_dir" value="${common_lib_dir}/build" />
	<property name="common_package_lib_dir" value="${common_lib_dir}/package" />
	<property name="common_test_lib_dir" value="${common_lib_dir}/test" />
	<property name="common_test_build_dir" value="${common_dir}/target/test-classes" />

	<property name="common_build_script" value="${common_dir}/build.xml" />
	<property name="common_package_dir" value="${common_dir}/target/package" />
	<property name="common_jar_name" value="common.jar" />

	<path id="classpath">
		<fileset dir="${common_build_lib_dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${common_package_lib_dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${common_package_dir}/${common_jar_name}" />
	</path>

	<path id="test_classpath">
		<path refid="classpath" />
		<fileset dir="${common_test_lib_dir}">
			<include name="**/*.jar" />
		</fileset>
		<path path="${build_dir}" />
		<path path="${common_test_build_dir}" />
	</path>

	<patternset id="manifest_exclude">
		<exclude name="META-INF/**" />
	</patternset>

	<target name="clean">
		<delete dir="${target_dir}" />
	</target>

	<target name="package_common">
		<ant antfile="${common_build_script}" target="run" dir="${common_dir}" inheritall="false">
			<property name="javac_debug" value="${javac_debug}" />
			<property name="perform_unit_tests" value="${perform_unit_tests}" />
		</ant>
	</target>

	<target name="build" depends="package_common">
		<mkdir dir="${build_dir}" />
		<copy todir="${build_dir}">
			<fileset dir="${resources_dir}" />
		</copy>
		<javac source="1.6" target="1.6" destdir="${build_dir}" classpathref="classpath" listfiles="no" fork="true" debug="${javac_debug}" includeantruntime="no">
			<src path="${src_dir}" />
		</javac>
	</target>

	<target name="build-test" depends="build" if="${perform_unit_tests}">
		<mkdir dir="${test_build_dir}" />
		<copy todir="${test_build_dir}">
			<fileset dir="${test_src_dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac source="1.6" target="1.6" destdir="${test_build_dir}" classpathref="test_classpath" listfiles="no" fork="true" debug="${javac_debug}" includeantruntime="no">
			<src path="${test_src_dir}" />
		</javac>
	</target>

	<target name="test" depends="build-test" if="${perform_unit_tests}">
		<mkdir dir="${test_results_dir}" />
		<mkdir dir="${test_reports_dir}" />
		<junit printsummary="on" failureproperty="junit.failure">
			<classpath>
				<path refid="test_classpath" />
				<path path="${test_build_dir}" />
			</classpath>
			<batchtest todir="${test_results_dir}">
				<fileset dir="${test_build_dir}">
					<include name="**/*Test.class" />
				</fileset>
				<formatter type="xml" />
			</batchtest>
		</junit>
		<junitreport todir="${test_reports_dir}">
			<fileset dir="${test_results_dir}" />
			<report todir="${test_reports_dir}" />
		</junitreport>
		<fail if="junit.failure" message="Unit test(s) failed. See reports!" />
	</target>

	<target name="package" depends="test">
		<mkdir dir="${package_dir}" />
		<jar destfile="${package_dir}/${jar_name}">
			<manifest>
				<attribute name="Main-Class" value="au.gov.ga.worldwind.viewer.application.Application" />
			</manifest>
			<fileset dir="${build_dir}" />
		</jar>
	</target>

	<target name="executable" depends="package">
		<mkdir dir="${executable_dir}" />

		<jar destfile="${executable_dir}/${executable_jar_name}">
			<fileset dir="${build_dir}" />

			<zipgroupfileset dir="${common_package_dir}">
				<include name="${common_jar_name}" />
				<patternset refid="manifest_exclude" />
			</zipgroupfileset>

			<zipgroupfileset dir="${common_package_lib_dir}">
				<include name="**/*.jar" />
				<patternset refid="manifest_exclude" />
			</zipgroupfileset>
			<fileset dir="${common_package_lib_dir}" excludes="**/*.jar" />

			<zipgroupfileset dir="${common_build_lib_dir}">
				<include name="**/*.jar" />
				<patternset refid="manifest_exclude" />
			</zipgroupfileset>
			<fileset dir="${common_build_lib_dir}" excludes="**/*.jar" />

			<manifest>
				<attribute name="Main-Class" value="au.gov.ga.worldwind.viewer.application.Executable" />
			</manifest>
		</jar>

		<echo file="${executable_dir}/${executable_batch_name}">java -Dsun.java2d.noddraw=true -Xmx1024m -jar ./${executable_jar_name}</echo>
	</target>

	<target name="webstart" depends="package">
		<mkdir dir="${webstart_unsigned_dir}" />

		<copy todir="${webstart_unsigned_dir}">
			<fileset dir="${package_dir}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${common_package_dir}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${common_package_lib_dir}">
				<include name="**/*.jar" />
			</fileset>
		</copy>

		<jar destfile="${webstart_unsigned_dir}/${webstart_resources_jar_name}">
			<fileset dir="${common_package_lib_dir}">
				<exclude name="**/*.jar" />
				<exclude name="native/" />
			</fileset>
		</jar>

		<jar destfile="${webstart_unsigned_dir}/${ww_natives_windows_i586_jar}">
			<fileset dir="${common_package_lib_dir}/native/windows-i586" />
		</jar>
		<jar destfile="${webstart_unsigned_dir}/${ww_natives_windows_amd64_jar}">
			<fileset dir="${common_package_lib_dir}/native/windows-amd64" />
		</jar>
		<jar destfile="${webstart_unsigned_dir}/${ww_natives_macosx_universal_jar}">
			<fileset dir="${common_package_lib_dir}/native/macosx-universal" />
		</jar>
		<jar destfile="${webstart_unsigned_dir}/${ww_natives_linux_i586_jar}">
			<fileset dir="${common_package_lib_dir}/native/linux-i586" />
		</jar>
		<jar destfile="${webstart_unsigned_dir}/${ww_natives_linux_amd64_jar}">
			<fileset dir="${common_package_lib_dir}/native/linux-amd64" />
		</jar>
	</target>

	<target name="sign" depends="webstart">
		<mkdir dir="${webstart_selfsigned_dir}" />

		<signjar destDir="${webstart_selfsigned_dir}" keystore="${keystore_file}" alias="${keystore_alias}" storepass="${keystore_password}">
			<path>
				<fileset dir="${webstart_unsigned_dir}" includes="**/*.jar" />
			</path>
			<flattenmapper />
		</signjar>
	</target>

	<target name="run" depends="executable, sign" />

</project>
