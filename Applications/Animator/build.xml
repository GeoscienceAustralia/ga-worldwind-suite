<?xml version="1.0" ?>

<project name="Animator" basedir="." default="deploy">

	<property name="deploy_location" value="\\NAS\Corp\gav\GEOVIS\VIS\Projects\Animator 2.0\Builds\Current"/>
	
	<property name="application_version" value="2.0-SNAPSHOT"/>
	<property name="application_class" value="au.gov.ga.worldwind.animator.application.Animator"/>
	<property name="executable_class" value="au.gov.ga.worldwind.animator.application.Executable"/>
	<property name="application_jar" value="ga-animator-${application_version}.jar" />
	<property name="application_uber_jar" value="ga-animator-full-${application_version}.jar" />
	
	<property name="worldwind_version" value="0.6.663.14141"/>
	<property name="worldwind_dir" value="${basedir}/../../SDK/worldwind-${worldwind_version}" />
	<property name="worldwind_jar" value="worldwind.jar" />
	
	<property name="jogl_dir" value="${basedir}/../../SDK/JOGL-JSR-231" />	
	<property name="common_src_dir" value="${basedir}/../Common/src" />
	<property name="common_test_src_dir" value="${basedir}/../Common/test/src" />
	
	<property name="src_dir" value="${basedir}/src" />
	<property name="working_src_dir" value="${basedir}/tmp_src" />
	<property name="build_dir" value="${basedir}/build" />
	<property name="target_dir" value="${basedir}/target" />
	<property name="lib_dir" value="${target_dir}/lib" />

	<property name="test_src_dir" value="${basedir}/test/src"/>
	<property name="test_lib_dir" value="${basedir}/test/lib"/>
	<property name="test_build_dir" value="${basedir}/test/build"/>
	<property name="test_results_dir" value="${basedir}/test/results"/>
	<property name="test_reports_dir" value="${basedir}/test/reports"/>
	
	<property name="run_file" value="run.bat"/>

	<property name="javac_debug" value="false" />

	<path id="classpath">
		<fileset dir="${worldwind_dir}">
			<include name="${worldwind_jar}" />
		</fileset>
		<fileset dir="${jogl_dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<path id="test_classpath">
		<path refid="classpath"/>
		<fileset dir="${test_lib_dir}">
			<include name="**/*.jar" />
		</fileset>
		<path path="${build_dir}"/>
	</path>

	<patternset id="manifest_exclude">
		<exclude name="META-INF/*.DSA" />
		<exclude name="META-INF/*.RSA" />
		<exclude name="META-INF/*.SF" />
		<exclude name="META-INF/MANIFEST.MF" />
		<exclude name="META-INF/INDEX.LIST" />
	</patternset>

	<target name="clean">
		<delete dir="${build_dir}" />
		<delete dir="${target_dir}" />
		<delete dir="${test_build_dir}" />
		<delete dir="${test_results_dir}" />
		<delete dir="${test_reports_dir}" />
		<delete dir="${working_src_dir}" />
	</target>

	<target name="build">
		<mkdir dir="${working_src_dir}" />
		<copy todir="${working_src_dir}">
			<fileset dir="${common_src_dir}"/>
		</copy>
		<copy todir="${working_src_dir}" overwrite="true">
			<fileset dir="${src_dir}"/>
		</copy>
		
		<mkdir dir="${build_dir}" />
		<copy todir="${build_dir}">
			<fileset dir="${working_src_dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac source="1.6" target="1.6" srcdir="${working_src_dir}" destdir="${build_dir}" classpathref="classpath" listfiles="no" fork="true" debug="${javac_debug}" />
		
		<delete dir="${working_src_dir}" />
	</target>

	<target name="build-test" depends="build">
		<mkdir dir="${working_src_dir}" />
		<copy todir="${working_src_dir}">
			<fileset dir="${common_test_src_dir}"/>
		</copy>
		<copy todir="${working_src_dir}" overwrite="true">
			<fileset dir="${test_src_dir}"/>
		</copy>
		
		<mkdir dir="${test_build_dir}"/>
		<copy todir="${test_build_dir}">
			<fileset dir="${working_src_dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac source="1.6" target="1.6" srcdir="${working_src_dir}" destdir="${test_build_dir}" classpathref="test_classpath" listfiles="no" fork="true" debug="${javac_debug}" />
		
		<delete dir="${working_src_dir}" />
	</target>
	
	<target name="test" description="Execute unit tests on the project" depends="build-test">
		<mkdir dir="${test_results_dir}"/>
		<mkdir dir="${test_reports_dir}"/>
		<junit printsummary="withOutAndErr" failureproperty="junit.failure">
			<classpath refid="test_classpath"/>
			<classpath path="classes:${test_build_dir}"/>
			<batchtest todir="${test_results_dir}">
				<fileset dir="${test_build_dir}">
					<include name="**/*Test.class"/>
				</fileset>
				<formatter type="xml"/>
			</batchtest>
		</junit>
		<junitreport todir="${test_reports_dir}">
			<fileset dir="${test_results_dir}"/>
			<report todir="${test_reports_dir}"/>
		</junitreport>
		<fail if="junit.failure" message="Unit test(s) failed.  See reports!"/>
	</target>
	
	<target name="package" depends="test">
		<jar destfile="${build_dir}/${application_jar}" basedir="${build_dir}">
			<manifest>
				<attribute name="Main-Class" value="${application_class}" />
			</manifest>
		</jar>
		<jar destfile="${build_dir}/${worldwind_jar}">
			<zipfileset src="${worldwind_dir}/${worldwind_jar}">
				<patternset refid="manifest_exclude" />
			</zipfileset>
		</jar>
	</target>

	<target name="executables" depends="clean, package">
		<mkdir dir="${target_dir}" />
		
		<zip destfile="${target_dir}/temp.zip">
			<zipgroupfileset dir="${jogl_dir}">
				<include name="**/*.jar" />
			</zipgroupfileset>
			<zipgroupfileset dir="${worldwind_dir}">
				<include name="${worldwind_jar}" />
			</zipgroupfileset>
		</zip>

		<jar destfile="${target_dir}/${application_uber_jar}">
			<fileset dir="${build_dir}" excludes="**/*.jar,**/*.zip"/>
			<fileset dir="${jogl_dir}" includes="native/**" />
			<zipfileset src="${target_dir}/temp.zip">
				<patternset refid="manifest_exclude" />
			</zipfileset>

			<manifest>
				<attribute name="Main-Class" value="${executable_class}" />
			</manifest>
		</jar>

		<delete file="${target_dir}/temp.zip" />
		
		<echo file="${target_dir}/${run_file}">java -Dsun.java2d.noddraw=true -Xmx1024m -jar ./${application_uber_jar}</echo>
		
	</target>

	<target name="deploy" depends="executables">
		<copy todir="${deploy_location}" overwrite="true" failonerror="false">
			<fileset dir="${target_dir}"/>
		</copy>
	</target>
	
</project>
