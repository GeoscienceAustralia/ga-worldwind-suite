<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
		   targetNamespace="http://www.ga.gov.au/worldwind/CurtainImageLayer"
		   xmlns="http://www.ga.gov.au/worldwind/CurtainImageLayer">

  <xs:annotation>
  	<xs:documentation>
  		Curtain image layers are used to display high-resolution image data on vertical ribbon curtains that can be positioned above or below the surface of the earth. 
  		
  		These layers support tiling, and can make more efficient use of textures than Tiled Image Layers for long, thin images.

		Curtain image layers are useful for displaying seismic and radar datasets etc
  	</xs:documentation>
  </xs:annotation>

  <xs:element name="Layer">
  	<xs:annotation>
  		<xs:documentation>
  			The root element of all layer definitions.
  		</xs:documentation>
  	</xs:annotation>
    <xs:complexType>
      <xs:all>
        <xs:element minOccurs="0" ref="DisplayName"/>
        <xs:element minOccurs="1" ref="Service"/>
        <xs:element minOccurs="0" ref="Delegates"/>
        <xs:element minOccurs="0" ref="LastUpdate"/>
        <xs:element minOccurs="0" ref="DatasetName"/>
        <xs:element minOccurs="1" ref="DataCacheName"/>
        <xs:element minOccurs="1" ref="ImageFormat"/>
        <xs:element minOccurs="0" ref="AvailableImageFormats"/>
        <xs:element minOccurs="1" ref="FormatSuffix"/>
        <xs:element minOccurs="1" ref="NumLevels"/>
        <xs:element minOccurs="1" ref="TileSize"/>
        <xs:element minOccurs="1" ref="FullSize"/>
        <xs:element minOccurs="1" ref="Path"/>
        <xs:element minOccurs="1" ref="CurtainTop"/>
        <xs:element minOccurs="1" ref="CurtainBottom"/>
        <xs:element minOccurs="1" ref="FollowTerrain"/>
        <xs:element minOccurs="0" ref="Subsegments"/>
        <xs:element minOccurs="0" ref="UseTransparentTextures"/>
        <xs:element minOccurs="0" ref="ForceLevelZeroLoads"/>
        <xs:element minOccurs="0" ref="TextureFormat"/>
        <xs:element minOccurs="0" ref="UseMipMaps"/>
        <xs:element minOccurs="0" ref="SplitScale"/>
      </xs:all>
      <xs:attribute name="layerType" use="required">
      	<xs:simpleType>
      		<xs:restriction base="xs:string">
      			<xs:enumeration value="CurtainImageLayer"/>
      		</xs:restriction>
      	</xs:simpleType>
      </xs:attribute>
      <xs:attribute name="version" use="required">
      	<xs:simpleType>
      		<xs:restriction base="xs:integer">
      			<xs:enumeration value="1"/>
      		</xs:restriction>
      	</xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="DisplayName" type="xs:string">
  	<xs:annotation>
  		<xs:documentation>
  			Used to define a human-readable name for the layer. This name is used within the GA World Wind Suite to allow users to identify layers.
			
			The display name should be concise and meaningful. All layer definition files should define a display name.
  		</xs:documentation>
  	</xs:annotation>
  </xs:element>
  
  <xs:element name="Service">
  	<xs:annotation>
  		<xs:documentation>
  			Defines the service type to use for retrieving image tiles, along with the URL to connect to to retrieve the tiles.
  		</xs:documentation>
  	</xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="URL" type="xs:anyURI">
        	<xs:annotation>
        		<xs:documentation>
        			Defines the URL to be used by the tile service to retrieve image tiles for the layer.
        		</xs:documentation>
        	</xs:annotation>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="serviceName" use="required" type="ServiceType">
      	<xs:annotation>
      		<xs:documentation>
      			The name of the tile service to use when retrieving image tiles for the layer.
      		</xs:documentation>
      	</xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="Delegates">
  	<xs:annotation>
  		<xs:documentation>
	  		Specifies a list of delegates element that are to be applied to the tile retrieval process. 
	  		
	  		These delegates may control tile retrieval, or perform pre-processing on tile images.
  		</xs:documentation>
  	</xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="Delegate"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="Delegate">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies a single delegate for use with the DelegatorTileService. 
  			
  			Delegates may have parameters passed to them as a comma-separated list of parameter values surrounded by braces.
  		</xs:documentation>
  	</xs:annotation>
  	<xs:simpleType>
  		<xs:restriction base="xs:string">
  			<xs:pattern value="[a-zA-Z]*(\(.*\))?"></xs:pattern>
  		</xs:restriction>
  	</xs:simpleType>
  </xs:element>
  
  <xs:element name="LastUpdate">
  	<xs:annotation>
  		<xs:documentation>
  			Records the timestamp of the last time the layer data was updated.
  			
  			This is compared to the timestamps of image tiles residing in the cache and used to trigger re-downloading of the tiles.
			
			This field should be updated whenever the tileset for a layer is re-generated.
			
			Expects timestamps in the format "dd MM yyyy HH:mm:ss Z"
  		</xs:documentation>
  	</xs:annotation>
  	<xs:simpleType>
  		<xs:restriction base="xs:string">
  			<xs:pattern value="()|([0-9]{2} [0-9]{2} [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} .*)"/>
  		</xs:restriction>
  	</xs:simpleType>
  </xs:element>
  
  <xs:element name="DatasetName" type="xs:string">
  	<xs:annotation>
  		<xs:documentation>
  			Identifies the layer dataset on the tile server identified by the service URL.
			
			In the case of a remote retrieval, this field gets passed to the tile server as query parameter 'T'.
			
			In the case of tiles retrieved using the LocalRequester delegate, the DatasetName is used in conjunction 
			with the service URL to locate the tileset on the local filesystem. The choice of what part of the path to 
			include in the URL and what to include in the DatasetName is somewhat arbitrary, but often local tilesets 
			are stored in a common location so it makes sense to set the URL element to this common path and use the 
			DatasetName to uniquely identify the target layer tileset inside that common location.
  		</xs:documentation>
  	</xs:annotation>
  </xs:element>
  
  <xs:element name="DataCacheName" type="xs:string">
  	<xs:annotation>
  		<xs:documentation>
  			Identifies the location to store cached layer information within the user's WorldWindData folder.

			Layers for GA data should be stored within the 'GA/' subdirectory.  			
  		</xs:documentation>
  	</xs:annotation>
  </xs:element>
  
  <xs:element name="ImageFormat">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies the default (preferred) image format to use for retrieving image tiles.

			In the case of a remote retrieval, this field gets passed to the tile server as query parameter 'F'.
			
			If the image tiles are not available in the specified format, the retriever may fall back to 
			those listed in the AvailableImageFormats element.
  		</xs:documentation>
  	</xs:annotation>
  	<xs:simpleType>
  		<xs:restriction base="xs:string">
  			<xs:enumeration value="application/zip"/>
  			<xs:enumeration value="image/dds"/>
  			<xs:enumeration value="image/gif"/>
  			<xs:enumeration value="image/jpg"/>
  			<xs:enumeration value="image/png"/>
  			<xs:enumeration value="image/tif"/>
  		</xs:restriction>
  	</xs:simpleType>
  </xs:element>
  
  <xs:element name="AvailableImageFormats">
  	<xs:annotation>
  		<xs:documentation>
  			Lists the available image formats for this layer.
  		</xs:documentation>
  	</xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ImageFormat"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="FormatSuffix">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies the extension to add to downloaded image tiles when storing them in the tile cache. 
  			This should correspond to the image format specified in the ImageFormat element.
  		</xs:documentation>
  	</xs:annotation>
  	<xs:simpleType>
  		<xs:restriction base="xs:NMTOKEN">
  			<xs:pattern value="\.[a-zA-Z0-9]+"/>
  		</xs:restriction>
  	</xs:simpleType>
  </xs:element>
  
  <xs:element name="NumLevels">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies the number of levels available in the dataset, along with the number of 'empty' levels (i.e. levels that contain no data).
  		</xs:documentation>
  	</xs:annotation>
    <xs:complexType>
      <xs:attribute name="count" use="required" type="xs:integer">
      	<xs:annotation>
      		<xs:documentation>
      			The number of tile levels in the dataset.
      		</xs:documentation>
      	</xs:annotation>
      </xs:attribute>
      <xs:attribute name="numEmpty" use="required" type="xs:integer">
      	<xs:annotation>
      		<xs:documentation>
      			The number of top-level levels that contain no data.

				For example, if the Level Zero Tile Size (LZTS) is 36ยบ and numEmpty=2, the first level of data will have tiles 
				of size 9ยบ (LZTS / 2^numEmpty) and will 'turn on' at level 2.

				Most often numEmpty should be set to 0.
      		</xs:documentation>
      	</xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="TileSize">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies the dimensions (in pixels) of each tile in the layer.
  		</xs:documentation>
  	</xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Dimension"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="FullSize">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies the total resolution (in pixels) of the curtain image. Often this will be a dimension with the 'width' significantly larger than the 'height'.
  		</xs:documentation>
  	</xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Dimension"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="Dimension">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies a rectangular dimension of width x height.
  		</xs:documentation>
  	</xs:annotation>
    <xs:complexType>
      <xs:attribute name="height" use="required" type="xs:nonNegativeInteger"/>
      <xs:attribute name="width" use="required" type="xs:nonNegativeInteger"/>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="Path">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies the path that the curtain is to follow. 

			A path is defined by 2 or more ordered LatLon elements. The curtain will be rendered as a vertical strip that passes through the points specified on the path. 
			
			Between any two points on the path, the curtain section will follow a straight line.
  		</xs:documentation>
  	</xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="2" maxOccurs="unbounded" ref="LatLon"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="CurtainTop" type="NonNegativeDecimal">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies the elevation (in metres) of the top of the curtain.

			If FollowTerrain is true, this value will be used as an offset from sea level (0m).
			
			Values must be greater (higher) than the value for CurtainBottom.
  		</xs:documentation>
  	</xs:annotation>
  </xs:element>
  
  <xs:element name="CurtainBottom" type="NonNegativeDecimal">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies the elevation (in metres) of the bottom of the curtain.

			If FollowTerrain is true, this value will be used as an offset from sea level (0m).
			
			Values must be lower than the value for CurtainTop.
  		</xs:documentation>
  	</xs:annotation>
  </xs:element>
  
  <xs:element name="FollowTerrain" type="xs:boolean">
  	<xs:annotation>
  		<xs:documentation>
  			Whether or not the curtain should be deformed to follow the terrain of the elevation model.

			If false, the curtain will be rendered at a constant elevation defined with CurtainTop and CurtainBottom. This will follow the underlying globe shape (e.g. spherical, ellipsoidal or flat depending on the globe used).
			
			If true, the curtain will be deformed such that it follows the terrain of any elevation model present.
  		</xs:documentation>
  	</xs:annotation>
  </xs:element>
  
  <xs:element name="Subsegments" type="xs:nonNegativeInteger">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies the number of subsegments to divide the curtain into between points on the path.

			A higher value will increase the terrain- and curvature-following resolution of the curtain, but may affect performance.
  		</xs:documentation>
  	</xs:annotation>
  </xs:element>
  
  <xs:element name="UseTransparentTextures" type="xs:boolean">
  	<xs:annotation>
  		<xs:documentation>
  			Whether or not to enable transparency for this layer.
  		</xs:documentation>
  	</xs:annotation>
  </xs:element>
  
  <xs:element name="ForceLevelZeroLoads" type="xs:boolean">
  	<xs:annotation>
  		<xs:documentation>
  			Whether or not to load level 0 tiles from the cache on the render thread so that they are immediately visible. 
  			
  			Setting this to true will slow down the render thread on the first drawing of the layer, but ensures that at least 
  			a low-resolution version of the layer is available immediately.
  		</xs:documentation>
  	</xs:annotation>
  </xs:element>
  
  <xs:element name="TextureFormat">
  	<xs:annotation>
  		<xs:documentation>
  			Specifies the texture format to use when loading image tiles into memory. If not specified, the image tiles will be loaded 
  			in their native format. If specified, images will be converted to the specified format on load.

			Currently only supports the DDS (Direct Draw Surface) format. This is a format designed for use in realtime graphics, and is 
			the recommended format to use where possible.
  		</xs:documentation>
  	</xs:annotation>
  	<xs:simpleType>
  		<xs:restriction base="xs:string">
  			<xs:enumeration id="blank" value=""/>
  			<xs:enumeration id="dds" value="image/dds"/>
  		</xs:restriction>
  	</xs:simpleType>
  </xs:element>
  
  <xs:element name="UseMipMaps" type="xs:boolean">
  	<xs:annotation>
  		<xs:documentation>
  			Enable automatic texture mipmapping. This is an optimisation technique that may increase rendering speed of the layer.
  		</xs:documentation>
  	</xs:annotation>
  </xs:element>
  
  <xs:element name="SplitScale">
  	<xs:annotation>
  		<xs:documentation>
  			Deprecated. Use DetailHint instead.

			This is the old way of controlling at what point tiles are split and the next level is loaded. The split scale is related to 
			the resolution of the tile as viewed in the world window compared to the resolution of the image tile.

			A SplitScale of 0.9 is equivalent to a DetailHint of 0.
  		</xs:documentation>
  	</xs:annotation>
  	<xs:simpleType>
  		<xs:restriction base="xs:decimal">
  			<xs:minInclusive value="0.0"/>
  		</xs:restriction>
  	</xs:simpleType>
  </xs:element>
  
  <xs:element name="LatLon">
    <xs:complexType>
      <xs:attribute name="latitude" use="required" type="xs:decimal"/>
      <xs:attribute name="longitude" use="required" type="xs:decimal"/>
      <xs:attribute name="units" use="optional" default="degrees" type="AngleUnits"/>
    </xs:complexType>
  </xs:element>
  
  <xs:simpleType name="ServiceType">
  	<xs:restriction base="xs:string">
  		<xs:enumeration value="Offline"/>
  		<xs:enumeration value="WWTileService"/>
  		<xs:enumeration value="OGC:WMS"/>
  		<xs:enumeration value="DelegatorTileService"/>
  	</xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="AngleUnits">
  	<xs:restriction base="xs:string">
  		<xs:enumeration value="degrees"/>
  		<xs:enumeration value="radians"/>
  	</xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="NonNegativeDecimal">
  	<xs:restriction base="xs:decimal">
  		<xs:minInclusive value="0"/>
  	</xs:restriction>
  </xs:simpleType>
  
</xs:schema>